@model IEnumerable<SubjectSelection.Models.User>

@{
    var parentList = ViewBag.parentList;
    var currentUserId = ViewBag.currentUserId;
}
Users who can edit:
<form class="@(currentUserId == parentList.OwnerId ? string.Empty : "hidden")" asp-action="AddUser" asp-route-parentListId="@parentList.SubjectListId">
    @*<div class="form-group">*@
    <div class="row">
        <div class="col-md-12">
            <label for="userId">User Id</label>
        </div>
    </div>
    <div class="row">
        <div class="col-md-11">
            <input type="number" class="form-control" id="userId" placeholder="Enter user id" name="userId" />
        </div>
        <div class="col-md-1">
            <button type="submit" class="btn btn-primary">Add</button>
        </div>
    </div>
    @*</div>*@
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StudentCardId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.NormalizedUserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NormalizedEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmailConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PasswordHash)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SecurityStamp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ConcurrencyStamp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TwoFactorEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccessFailedCount)
                </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{int i = 0;}
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentCardId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.NormalizedUserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NormalizedEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailConfirmed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PasswordHash)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SecurityStamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConcurrencyStamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccessFailedCount)
                    </td>*@
                <td>
                    @if (i == 0)
                    {
                        <span>Owner</span>
                    }
                    else
                    {
                        <span class="@(currentUserId == parentList.OwnerId ? string.Empty : "hidden")"><a asp-action="Delete" asp-route-id="@item.Id">Delete</a></span>
                    }
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>
